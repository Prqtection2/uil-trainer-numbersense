generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  sessions      Session[]
  stats         Stats[]
  achievements  Achievement[]
}

model Stats {
  id        String   @id @default(cuid())
  userId    String
  topicId   String
  attempts  Int      @default(0)
  avgTime   Float    @default(0)
  bestTime  Float    @default(0)
  accuracy  Float    @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  level     String   @default("UNRANKED") // UNRANKED, BRONZE, SILVER, GOLD
  schoolLevel String @default("ELEMENTARY") // ELEMENTARY, MIDDLE, HIGH
  bestAccuracy Float @default(0)
  bestStreak Int @default(0)
  totalQuestions Int @default(0)
  correctAnswers Int @default(0)

  @@unique([userId, topicId])
}

model Achievement {
  id          String   @id @default(cuid())
  userId      String
  topicId     String
  level       String   // BRONZE, SILVER, GOLD
  unlockedAt  DateTime @default(now())
  requirements Json    // Store requirements met for this achievement
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, topicId, level])
} 